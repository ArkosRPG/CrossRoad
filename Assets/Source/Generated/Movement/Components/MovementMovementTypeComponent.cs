//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MovementEntity {

    public MovementTypeComponent movementType { get { return (MovementTypeComponent)GetComponent(MovementComponentsLookup.MovementType); } }
    public bool hasMovementType { get { return HasComponent(MovementComponentsLookup.MovementType); } }

    public void AddMovementType(MovementType newValue) {
        var index = MovementComponentsLookup.MovementType;
        var component = CreateComponent<MovementTypeComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMovementType(MovementType newValue) {
        var index = MovementComponentsLookup.MovementType;
        var component = CreateComponent<MovementTypeComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMovementType() {
        RemoveComponent(MovementComponentsLookup.MovementType);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MovementMatcher {

    static Entitas.IMatcher<MovementEntity> _matcherMovementType;

    public static Entitas.IMatcher<MovementEntity> MovementType {
        get {
            if (_matcherMovementType == null) {
                var matcher = (Entitas.Matcher<MovementEntity>)Entitas.Matcher<MovementEntity>.AllOf(MovementComponentsLookup.MovementType);
                matcher.componentNames = MovementComponentsLookup.componentNames;
                _matcherMovementType = matcher;
            }

            return _matcherMovementType;
        }
    }
}
